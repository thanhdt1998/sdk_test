

buildscript {

    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'

        classpath "com.jaredsburrows:gradle-license-plugin:0.8.80"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
        // classpath dependenciesList.jacocoPlugin
        classpath "io.github.gradle-nexus:publish-plugin:1.1.0"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'



    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        google()
    }
    apply from: "${rootDir}/gradle/dependencies.gradle"
}
//plugins {
////    id 'io.github.gradle-nexus.publish-plugin'
////    id 'com.android.application' version '7.1.2' apply false
////    id 'com.android.library' version '7.1.2' apply false
//    id 'maven-publish'
////    id 'com.android.application' version '3.0.0' apply false
////    id 'com.android.library' version '7.0.0' apply false
////    id 'org.jetbrains.kotlin.android' version '1.5.31' apply false
//}

apply plugin: 'maven-publish'
//apply plugin: 'com.android.application'
apply plugin: 'com.android.library'
android {
    compileSdkVersion 31
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            productionRelease(MavenPublication) {
                // Applies the component for the release build variant.
               afterEvaluate {
                   // You can then customize attributes of the publication as shown below.
                   groupId = 'vn.vietmap'
                   artifactId = 'vietmapsdk'
                   version = '1.5'
                   from components.release
               }
            }
        }
    }
}
allprojects {

    repositories {
        mavenCentral()
        maven { url 'https://mapbox.bintray.com/mapbox' }
        maven { url 'https://jitpack.io'}
        google()
    }
    apply from: "${rootDir}/gradle/ktlint.gradle"
}
subprojects {
    apply from: "${rootDir}/gradle/dependencies.gradle"
}
apply plugin: 'io.github.gradle-nexus.publish-plugin'
apply from: "${rootDir}/gradle/publish-root.gradle"
// Set up Sonatype repository
nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))            
        }
    }
}
//task clean(type: Delete) {
//    delete rootProject.buildDir
//}